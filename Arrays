/**
Array 
collection of variabels 
*/
#include<iostream>

int main() 
{
	int example[5]; // array of 5 integers  created in stack destroyed when programme reach its curly brackets 
	for (int i = 0; i < 5; i++)
	{
		example[0] = i;
		std::cout << example[0]<< std::endl;
	}
	
	int* another = new int[5]; //In heap be alive utnill we delete  when over programme ends 
	for (int i = 0; i < 5; i++)
	{
		another[0] = i;
		std::cout << *another << std::endl;
	}
	delete[] another; 
	std::cin.get();
}


//============================================================================
// Name        : test.cpp
// Author      : Mubark
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================
#include <iostream>
#include <chrono>
#include <unistd.h>

struct Timer {

public:

	Timer() {  // make a constructor in struct 

		char array_len[26];      // set array length to 26 which stores 26 char 
		int index = 0;
		for (int i = 'a'; i <= 'z'; i++) {

			array_len[index] = i;

			std::cout << array_len[index] << std::endl;
			index++;
		}
	}

	void alphabetz_print() { // function in struct 
		char alphabetz;
		int i = 1;
		for (alphabetz = 'a'; alphabetz <= 'z'; alphabetz++) {
			std::cout << i << ": " << alphabetz << "\n";
			i++;
		}
	}
};

int main() {

	Timer myobj;          // make instance of struct  

	myobj.alphabetz_print();    // call function in main programme 

	std::cin.get();

}
