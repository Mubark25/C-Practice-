//==================Class example==================
#include<iostream>
#include"Header.h"

class player // define class here name player 
{
public:
	int x, y;
	int speed; 

	void Move(int xa , int ya ) // use a function in a class 
  {   
		x += xa* speed;   // use veriable of define class in function 
	    y += xa* speed;
	}

};

int main()
{
	player Player;   // call the class here
	Player.x = 5;    // use parameter of class 
	Player.Move(1, -1);   // call the function paramter of call after declaring the Public otherwise you need struct for that purpose 
	
	std::cin.get();  // by clicking on window prog will end 
}

//====================Create a class other example====================

#include<iostream>

class Log  // create a Log class 
{
public: // seperate different parts of class e.g static / dynamic variables
                        
	const  int LogLevelError = 0 ;
	const int LogLevelWarning = 1; 
	const int LogLevelInfo = 2; 

private:
	int m_LogLevel = LogLevelInfo ; // m_ this is class member  variable(private) 
public: 
	void SetLevel(int level)  // function defination in class 
	{
		m_LogLevel = level; // level is just local veriable  
	}

	void Error(const char* message)
	{	if(m_LogLevel >= LogLevelError)
		std::cout << "[ERROR]: " << message << std::endl;
}
	void Warn(const char* message)
	{
		if (m_LogLevel >= LogLevelWarning)
		std::cout << "[WARNING]: "<<message << std::endl;
}
	void Info(const char* message)
	{
		if (m_LogLevel >= LogLevelInfo)
		std::cout << "[INFO]: " << message << std::endl;

	}
};  // end of class with semicolon 

int main()
{
	Log log;
  log.SetLevel(log.LogLevelError); // call the calss what ever message we want to print 
	log.Warn("Hello");  
	log.Error("HEllo");
	log.Info("Hello"); 
	
	std::cin.get(); 
}

//========================STRUCT Example ================================

#include<iostream>

struct Entity // 
{
	int x, y;
	void Print()
	{
		std::cout << x << "," << y << std::endl; 
	}
};




int main() {
	Entity e; 
	e.x = 2;
	e.y = 3;

	Entity e1;
	e1.x = 5;
	e1.y = 6;

	e.Print();
	e1.Print(); 
	std::cin.get(); 

}

//============================================================================
// Name        : test.cpp
// Author      : Mubark
// Version     :
// Copyright   : Your copyright notice
// Description : Class in C++, Ansi-style
//============================================================================
#include <iostream>
#include <string>

struct GameEntry {

public:
	std::string name;
	int score;
	GameEntry() {   // Make a calss of Game entry 

		name = "";
		score = 0;
		int index = 0;
		std::string dataStoreArrayFirst[3];     // Two data entry Array
		int dataStoreArraySecond[3];

		for (int i = 0; i < 3; i++) {
			std::cout << "Enter name : ";
			{
				std::cin >> name;
				dataStoreArrayFirst[index] = name;   //Enter palyer name 
			}

			std::cout << "Submit your score:";
			{
				std::cin >> score;                   //Enter plaxyer score 
				dataStoreArraySecond[index] = score;

				while (score < 0.0 || score > 100) {
					std::cout << "Please re-enter a score between 0 - 100"
							<< std::endl;
					std::cin >> score;
				}
			}
			index++;
		}
	}

};

int main() {

	GameEntry myObject;   //make object of class ad it is displayed on consol 

	std::cin.get();

}
